VITE_SUPABASE_ANON_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFwcXJqa29ia3RqY3lyeGhxd3RtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTEzOTI4NzUsImV4cCI6MjA2Njk2ODg3NX0.99HhMrWfMStRH1p607RjOt6ChklI0iBjg8AGk_QUSbw"
VITE_SUPABASE_PROJECT_ID="apqrjkobktjcyrxhqwtm"
VITE_SUPABASE_PUBLISHABLE_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFwcXJqa29ia3RqY3lyeGhxd3RtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTEzOTI4NzUsImV4cCI6MjA2Njk2ODg3NX0.99HhMrWfMStRH1p607RjOt6ChklI0iBjg8AGk_QUSbw"
VITE_SUPABASE_URL="https://apqrjkobktjcyrxhqwtm.supabase.co"keeps our architecture clean.
Receiving Logic:

The OportunidadeDetalhePage.tsx will continue to use Laravel Echo to listen for the NewMessageCreated event on the Reverb WebSocket channel. When a message arrives (sent from our webhook), the UI will update in real-time. This logic remains the same.
Please start with Phase 1, Step 1: How to install and configure the netflie/whatsapp-cloud-api library in our Laravel project.

# API Configuration
VITE_API_URL="http://localhost:8000/api"
VITE_APP_URL="http://localhost:8000"

# Pusher Configuration
VITE_PUSHER_APP_KEY="local-dev-key"
VITE_PUSHER_APP_CLUSTER="mt1"
VITE_PUSHER_HOST="127.0.0.1"
VITE_PUSHER_PORT="6001"
VITE_PUSHER_SCHEME="http"
VITE_FORCE_TLS="false"

# Pusher Configuration
VITE_PUSHER_APP_KEY="local-dev-key"
VITE_PUSHER_APP_CLUSTER="mt1"
VITE_PUSHER_HOST="127.0.0.1"
VITE_PUSHER_PORT="6001"
VITE_PUSHER_SCHEME="http"
VITE_FORCE_TLS="false"
